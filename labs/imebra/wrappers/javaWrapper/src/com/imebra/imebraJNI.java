/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.imebra;

public class imebraJNI {
  public final static native long new_FileParts__SWIG_0();
  public final static native long new_FileParts__SWIG_1(long jarg1);
  public final static native long FileParts_size(long jarg1, FileParts jarg1_);
  public final static native long FileParts_capacity(long jarg1, FileParts jarg1_);
  public final static native void FileParts_reserve(long jarg1, FileParts jarg1_, long jarg2);
  public final static native boolean FileParts_isEmpty(long jarg1, FileParts jarg1_);
  public final static native void FileParts_clear(long jarg1, FileParts jarg1_);
  public final static native void FileParts_add(long jarg1, FileParts jarg1_, String jarg2);
  public final static native String FileParts_get(long jarg1, FileParts jarg1_, int jarg2);
  public final static native void FileParts_set(long jarg1, FileParts jarg1_, int jarg2, String jarg3);
  public final static native void delete_FileParts(long jarg1);
  public final static native long new_Groups__SWIG_0();
  public final static native long new_Groups__SWIG_1(long jarg1);
  public final static native long Groups_size(long jarg1, Groups jarg1_);
  public final static native long Groups_capacity(long jarg1, Groups jarg1_);
  public final static native void Groups_reserve(long jarg1, Groups jarg1_, long jarg2);
  public final static native boolean Groups_isEmpty(long jarg1, Groups jarg1_);
  public final static native void Groups_clear(long jarg1, Groups jarg1_);
  public final static native void Groups_add(long jarg1, Groups jarg1_, int jarg2);
  public final static native int Groups_get(long jarg1, Groups jarg1_, int jarg2);
  public final static native void Groups_set(long jarg1, Groups jarg1_, int jarg2, int jarg3);
  public final static native void delete_Groups(long jarg1);
  public final static native long new_TagsIds__SWIG_0();
  public final static native long new_TagsIds__SWIG_1(long jarg1);
  public final static native long TagsIds_size(long jarg1, TagsIds jarg1_);
  public final static native long TagsIds_capacity(long jarg1, TagsIds jarg1_);
  public final static native void TagsIds_reserve(long jarg1, TagsIds jarg1_, long jarg2);
  public final static native boolean TagsIds_isEmpty(long jarg1, TagsIds jarg1_);
  public final static native void TagsIds_clear(long jarg1, TagsIds jarg1_);
  public final static native void TagsIds_add(long jarg1, TagsIds jarg1_, long jarg2, TagId jarg2_);
  public final static native long TagsIds_get(long jarg1, TagsIds jarg1_, int jarg2);
  public final static native void TagsIds_set(long jarg1, TagsIds jarg1_, int jarg2, long jarg3, TagId jarg3_);
  public final static native void delete_TagsIds(long jarg1);
  public final static native long new_VOIs__SWIG_0();
  public final static native long new_VOIs__SWIG_1(long jarg1);
  public final static native long VOIs_size(long jarg1, VOIs jarg1_);
  public final static native long VOIs_capacity(long jarg1, VOIs jarg1_);
  public final static native void VOIs_reserve(long jarg1, VOIs jarg1_, long jarg2);
  public final static native boolean VOIs_isEmpty(long jarg1, VOIs jarg1_);
  public final static native void VOIs_clear(long jarg1, VOIs jarg1_);
  public final static native void VOIs_add(long jarg1, VOIs jarg1_, long jarg2, VOIDescription jarg2_);
  public final static native long VOIs_get(long jarg1, VOIs jarg1_, int jarg2);
  public final static native void VOIs_set(long jarg1, VOIs jarg1_, int jarg2, long jarg3, VOIDescription jarg3_);
  public final static native void delete_VOIs(long jarg1);
  public final static native long new_TagId__SWIG_0();
  public final static native long new_TagId__SWIG_1(int jarg1, int jarg2);
  public final static native long new_TagId__SWIG_2(int jarg1, long jarg2, int jarg3);
  public final static native void delete_TagId(long jarg1);
  public final static native int TagId_getGroupId(long jarg1, TagId jarg1_);
  public final static native long TagId_getGroupOrder(long jarg1, TagId jarg1_);
  public final static native int TagId_getTagId(long jarg1, TagId jarg1_);
  public final static native int ageUnit_t_days_get();
  public final static native int ageUnit_t_weeks_get();
  public final static native int ageUnit_t_months_get();
  public final static native int ageUnit_t_years_get();
  public final static native int imageQuality_t_veryHigh_get();
  public final static native int imageQuality_t_high_get();
  public final static native int imageQuality_t_aboveMedium_get();
  public final static native int imageQuality_t_medium_get();
  public final static native int imageQuality_t_belowMedium_get();
  public final static native int imageQuality_t_low_get();
  public final static native int imageQuality_t_veryLow_get();
  public final static native int bitDepth_t_depthU8_get();
  public final static native int bitDepth_t_depthS8_get();
  public final static native int bitDepth_t_depthU16_get();
  public final static native int bitDepth_t_depthS16_get();
  public final static native int bitDepth_t_depthU32_get();
  public final static native int bitDepth_t_depthS32_get();
  public final static native int tagVR_t_AE_get();
  public final static native int tagVR_t_AS_get();
  public final static native int tagVR_t_AT_get();
  public final static native int tagVR_t_CS_get();
  public final static native int tagVR_t_DA_get();
  public final static native int tagVR_t_DS_get();
  public final static native int tagVR_t_DT_get();
  public final static native int tagVR_t_FL_get();
  public final static native int tagVR_t_FD_get();
  public final static native int tagVR_t_IS_get();
  public final static native int tagVR_t_LO_get();
  public final static native int tagVR_t_LT_get();
  public final static native int tagVR_t_OB_get();
  public final static native int tagVR_t_SB_get();
  public final static native int tagVR_t_OD_get();
  public final static native int tagVR_t_OF_get();
  public final static native int tagVR_t_OL_get();
  public final static native int tagVR_t_OW_get();
  public final static native int tagVR_t_PN_get();
  public final static native int tagVR_t_SH_get();
  public final static native int tagVR_t_SL_get();
  public final static native int tagVR_t_SQ_get();
  public final static native int tagVR_t_SS_get();
  public final static native int tagVR_t_ST_get();
  public final static native int tagVR_t_TM_get();
  public final static native int tagVR_t_UC_get();
  public final static native int tagVR_t_UI_get();
  public final static native int tagVR_t_UL_get();
  public final static native int tagVR_t_UN_get();
  public final static native int tagVR_t_UR_get();
  public final static native int tagVR_t_US_get();
  public final static native int tagVR_t_UT_get();
  public final static native int drawBitmapType_t_drawBitmapRGB_get();
  public final static native int drawBitmapType_t_drawBitmapBGR_get();
  public final static native int drawBitmapType_t_drawBitmapRGBA_get();
  public final static native int drawBitmapType_t_drawBitmapBGRA_get();
  public final static native long new_Age(long jarg1, int jarg2);
  public final static native double Age_years(long jarg1, Age jarg1_);
  public final static native void Age_age_set(long jarg1, Age jarg1_, long jarg2);
  public final static native long Age_age_get(long jarg1, Age jarg1_);
  public final static native void Age_units_set(long jarg1, Age jarg1_, int jarg2);
  public final static native int Age_units_get(long jarg1, Age jarg1_);
  public final static native void delete_Age(long jarg1);
  public final static native long new_Date(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native void Date_year_set(long jarg1, Date jarg1_, long jarg2);
  public final static native long Date_year_get(long jarg1, Date jarg1_);
  public final static native void Date_month_set(long jarg1, Date jarg1_, long jarg2);
  public final static native long Date_month_get(long jarg1, Date jarg1_);
  public final static native void Date_day_set(long jarg1, Date jarg1_, long jarg2);
  public final static native long Date_day_get(long jarg1, Date jarg1_);
  public final static native void Date_hour_set(long jarg1, Date jarg1_, long jarg2);
  public final static native long Date_hour_get(long jarg1, Date jarg1_);
  public final static native void Date_minutes_set(long jarg1, Date jarg1_, long jarg2);
  public final static native long Date_minutes_get(long jarg1, Date jarg1_);
  public final static native void Date_seconds_set(long jarg1, Date jarg1_, long jarg2);
  public final static native long Date_seconds_get(long jarg1, Date jarg1_);
  public final static native void Date_nanoseconds_set(long jarg1, Date jarg1_, long jarg2);
  public final static native long Date_nanoseconds_get(long jarg1, Date jarg1_);
  public final static native void Date_offsetHours_set(long jarg1, Date jarg1_, int jarg2);
  public final static native int Date_offsetHours_get(long jarg1, Date jarg1_);
  public final static native void Date_offsetMinutes_set(long jarg1, Date jarg1_, int jarg2);
  public final static native int Date_offsetMinutes_get(long jarg1, Date jarg1_);
  public final static native void delete_Date(long jarg1);
  public final static native void VOIDescription_center_set(long jarg1, VOIDescription jarg1_, double jarg2);
  public final static native double VOIDescription_center_get(long jarg1, VOIDescription jarg1_);
  public final static native void VOIDescription_width_set(long jarg1, VOIDescription jarg1_, double jarg2);
  public final static native double VOIDescription_width_get(long jarg1, VOIDescription jarg1_);
  public final static native void VOIDescription_description_set(long jarg1, VOIDescription jarg1_, long jarg2);
  public final static native long VOIDescription_description_get(long jarg1, VOIDescription jarg1_);
  public final static native long new_VOIDescription();
  public final static native void delete_VOIDescription(long jarg1);
  public final static native int dimseCommandType_t_cStore_get();
  public final static native int dimseCommandType_t_cGet_get();
  public final static native int dimseCommandType_t_cFind_get();
  public final static native int dimseCommandType_t_cMove_get();
  public final static native int dimseCommandType_t_cCancel_get();
  public final static native int dimseCommandType_t_cEcho_get();
  public final static native int dimseCommandType_t_nEventReport_get();
  public final static native int dimseCommandType_t_nGet_get();
  public final static native int dimseCommandType_t_nSet_get();
  public final static native int dimseCommandType_t_nAction_get();
  public final static native int dimseCommandType_t_nCreate_get();
  public final static native int dimseCommandType_t_nDelete_get();
  public final static native int dimseCommandType_t_response_get();
  public final static native int dimseCommandPriority_t_low_get();
  public final static native int dimseCommandPriority_t_medium_get();
  public final static native int dimseCommandPriority_t_high_get();
  public final static native int dimseStatusCode_t_success_get();
  public final static native int dimseStatusCode_t_unsupportedOptionalAttributes_get();
  public final static native int dimseStatusCode_t_cannotUpdateperformedProcedureStepObject_get();
  public final static native int dimseStatusCode_t_unsupportedSOPClass_get();
  public final static native int dimseStatusCode_t_outOfResources_get();
  public final static native int dimseStatusCode_t_outOfResourcesCannotCalculateNumberOfMatches_get();
  public final static native int dimseStatusCode_t_outOfResourcesCannotPerformSubOperations_get();
  public final static native int dimseStatusCode_t_moveDestinationUnknown_get();
  public final static native int dimseStatusCode_t_identifierDoesNotMatchSOPClass_get();
  public final static native int dimseStatusCode_t_subOperationCompletedWithErrors_get();
  public final static native int dimseStatusCode_t_elementDiscarded_get();
  public final static native int dimseStatusCode_t_datasetDoesNotMatchSOPClass_get();
  public final static native int dimseStatusCode_t_UPSAlreadyCanceled_get();
  public final static native int dimseStatusCode_t_coercedInvalidValuesToValidValues_get();
  public final static native int dimseStatusCode_t_UPSStateAlreadyCompleted_get();
  public final static native int dimseStatusCode_t_unableToProcess_get();
  public final static native int dimseStatusCode_t_moreThanOneMatchFound_get();
  public final static native int dimseStatusCode_t_CannotSupportRequestedTemplate_get();
  public final static native int dimseStatusCode_t_UPSNotUpdated_get();
  public final static native int dimseStatusCode_t_transactionUIDNotProvided_get();
  public final static native int dimseStatusCode_t_UPSAlreadyInProgress_get();
  public final static native int dimseStatusCode_t_canScheduleOnlyWithNCreate_get();
  public final static native int dimseStatusCode_t_UPSCannotChangeState_get();
  public final static native int dimseStatusCode_t_instanceUIDDoesNotExist_get();
  public final static native int dimseStatusCode_t_unknownAETitle_get();
  public final static native int dimseStatusCode_t_UPSNotSchedule_get();
  public final static native int dimseStatusCode_t_UPSNotInProgress_get();
  public final static native int dimseStatusCode_t_UPSAlreadyCompleted_get();
  public final static native int dimseStatusCode_t_performerCannotBeContacted_get();
  public final static native int dimseStatusCode_t_performerDoesNotCancel_get();
  public final static native int dimseStatusCode_t_unappropriateActionForInstance_get();
  public final static native int dimseStatusCode_t_SCPDoesNotSupportEventReports_get();
  public final static native int dimseStatusCode_t_canceled_get();
  public final static native int dimseStatusCode_t_pending_get();
  public final static native int dimseStatusCode_t_pendingWithWarnings_get();
  public final static native long new_ReadMemory__SWIG_0();
  public final static native long new_ReadMemory__SWIG_1(byte[] jarg1);
  public final static native void delete_ReadMemory(long jarg1);
  public final static native long ReadMemory_size(long jarg1, ReadMemory jarg1_);
  public final static native long ReadMemory_data(long jarg1, ReadMemory jarg1_, byte[] jarg2);
  public final static native void ReadMemory_regionData(long jarg1, ReadMemory jarg1_, byte[] jarg2, long jarg4);
  public final static native boolean ReadMemory_empty(long jarg1, ReadMemory jarg1_);
  public final static native long new_ReadWriteMemory__SWIG_0();
  public final static native long new_ReadWriteMemory__SWIG_1(long jarg1);
  public final static native long new_ReadWriteMemory__SWIG_2(long jarg1, ReadMemory jarg1_);
  public final static native long new_ReadWriteMemory__SWIG_3(byte[] jarg1);
  public final static native void delete_ReadWriteMemory(long jarg1);
  public final static native void ReadWriteMemory_copyFrom(long jarg1, ReadWriteMemory jarg1_, long jarg2, ReadMemory jarg2_);
  public final static native void ReadWriteMemory_clear(long jarg1, ReadWriteMemory jarg1_);
  public final static native void ReadWriteMemory_resize(long jarg1, ReadWriteMemory jarg1_, long jarg2);
  public final static native void ReadWriteMemory_reserve(long jarg1, ReadWriteMemory jarg1_, long jarg2);
  public final static native void ReadWriteMemory_assign(long jarg1, ReadWriteMemory jarg1_, byte[] jarg2);
  public final static native void ReadWriteMemory_assignRegion(long jarg1, ReadWriteMemory jarg1_, byte[] jarg2, long jarg4);
  public final static native void MemoryPool_flush();
  public final static native long MemoryPool_getUnusedMemorySize();
  public final static native void MemoryPool_setMemoryPoolSize(long jarg1, long jarg2);
  public final static native long new_MemoryPool();
  public final static native void delete_MemoryPool(long jarg1);
  public final static native void delete_BaseStreamInput(long jarg1);
  public final static native long new_StreamTimeout(long jarg1, BaseStreamInput jarg1_, long jarg2);
  public final static native void delete_StreamTimeout(long jarg1);
  public final static native void delete_BaseStreamOutput(long jarg1);
  public final static native long new_StreamReader__SWIG_0(long jarg1, BaseStreamInput jarg1_);
  public final static native long new_StreamReader__SWIG_1(long jarg1, BaseStreamInput jarg1_, long jarg2, long jarg3);
  public final static native long StreamReader_getVirtualStream(long jarg1, StreamReader jarg1_, long jarg2);
  public final static native void StreamReader_terminate(long jarg1, StreamReader jarg1_);
  public final static native void delete_StreamReader(long jarg1);
  public final static native long new_StreamWriter__SWIG_0(long jarg1, BaseStreamOutput jarg1_);
  public final static native long new_StreamWriter__SWIG_1(long jarg1, BaseStreamOutput jarg1_, long jarg2, long jarg3);
  public final static native void delete_StreamWriter(long jarg1);
  public final static native long new_StreamWriter__SWIG_2(long jarg1, TCPStream jarg1_);
  public final static native long new_StreamWriter__SWIG_3(long jarg1, Pipe jarg1_);
  public final static native void delete_ReadingDataHandler(long jarg1);
  public final static native long ReadingDataHandler_getSize(long jarg1, ReadingDataHandler jarg1_);
  public final static native int ReadingDataHandler_getDataType(long jarg1, ReadingDataHandler jarg1_);
  public final static native int ReadingDataHandler_getSignedLong(long jarg1, ReadingDataHandler jarg1_, long jarg2);
  public final static native long ReadingDataHandler_getUnsignedLong(long jarg1, ReadingDataHandler jarg1_, long jarg2);
  public final static native double ReadingDataHandler_getDouble(long jarg1, ReadingDataHandler jarg1_, long jarg2);
  public final static native String ReadingDataHandler_getString(long jarg1, ReadingDataHandler jarg1_, long jarg2);
  public final static native long ReadingDataHandler_getUnicodeString(long jarg1, ReadingDataHandler jarg1_, long jarg2);
  public final static native long ReadingDataHandler_getDate(long jarg1, ReadingDataHandler jarg1_, long jarg2);
  public final static native long ReadingDataHandler_getAge(long jarg1, ReadingDataHandler jarg1_, long jarg2);
  public final static native void delete_ReadingDataHandlerNumeric(long jarg1);
  public final static native long ReadingDataHandlerNumeric_getMemory(long jarg1, ReadingDataHandlerNumeric jarg1_);
  public final static native long ReadingDataHandlerNumeric_data(long jarg1, ReadingDataHandlerNumeric jarg1_, byte[] jarg2);
  public final static native long ReadingDataHandlerNumeric_getUnitSize(long jarg1, ReadingDataHandlerNumeric jarg1_);
  public final static native boolean ReadingDataHandlerNumeric_isSigned(long jarg1, ReadingDataHandlerNumeric jarg1_);
  public final static native boolean ReadingDataHandlerNumeric_isFloat(long jarg1, ReadingDataHandlerNumeric jarg1_);
  public final static native void ReadingDataHandlerNumeric_copyTo(long jarg1, ReadingDataHandlerNumeric jarg1_, long jarg2, WritingDataHandlerNumeric jarg2_);
  public final static native void delete_WritingDataHandler(long jarg1);
  public final static native void WritingDataHandler_setSize(long jarg1, WritingDataHandler jarg1_, long jarg2);
  public final static native long WritingDataHandler_getSize(long jarg1, WritingDataHandler jarg1_);
  public final static native int WritingDataHandler_getDataType(long jarg1, WritingDataHandler jarg1_);
  public final static native void WritingDataHandler_setSignedLong(long jarg1, WritingDataHandler jarg1_, long jarg2, int jarg3);
  public final static native void WritingDataHandler_setUnsignedLong(long jarg1, WritingDataHandler jarg1_, long jarg2, long jarg3);
  public final static native void WritingDataHandler_setDouble(long jarg1, WritingDataHandler jarg1_, long jarg2, double jarg3);
  public final static native void WritingDataHandler_setString(long jarg1, WritingDataHandler jarg1_, long jarg2, String jarg3);
  public final static native void WritingDataHandler_setUnicodeString(long jarg1, WritingDataHandler jarg1_, long jarg2, long jarg3);
  public final static native void WritingDataHandler_setDate(long jarg1, WritingDataHandler jarg1_, long jarg2, long jarg3, Date jarg3_);
  public final static native void WritingDataHandler_setAge(long jarg1, WritingDataHandler jarg1_, long jarg2, long jarg3, Age jarg3_);
  public final static native void delete_WritingDataHandlerNumeric(long jarg1);
  public final static native long WritingDataHandlerNumeric_getMemory(long jarg1, WritingDataHandlerNumeric jarg1_);
  public final static native void WritingDataHandlerNumeric_assign(long jarg1, WritingDataHandlerNumeric jarg1_, byte[] jarg2);
  public final static native long WritingDataHandlerNumeric_data(long jarg1, WritingDataHandlerNumeric jarg1_, byte[] jarg2);
  public final static native long WritingDataHandlerNumeric_getUnitSize(long jarg1, WritingDataHandlerNumeric jarg1_);
  public final static native boolean WritingDataHandlerNumeric_isSigned(long jarg1, WritingDataHandlerNumeric jarg1_);
  public final static native boolean WritingDataHandlerNumeric_isFloat(long jarg1, WritingDataHandlerNumeric jarg1_);
  public final static native void WritingDataHandlerNumeric_copyFrom(long jarg1, WritingDataHandlerNumeric jarg1_, long jarg2, ReadingDataHandlerNumeric jarg2_);
  public final static native void delete_LUT(long jarg1);
  public final static native long LUT_getDescription(long jarg1, LUT jarg1_);
  public final static native long LUT_getReadingDataHandler(long jarg1, LUT jarg1_);
  public final static native long LUT_getBits(long jarg1, LUT jarg1_);
  public final static native long LUT_getSize(long jarg1, LUT jarg1_);
  public final static native int LUT_getFirstMapped(long jarg1, LUT jarg1_);
  public final static native long LUT_getMappedValue(long jarg1, LUT jarg1_, int jarg2);
  public final static native long new_Image(long jarg1, long jarg2, int jarg3, String jarg4, long jarg5);
  public final static native void delete_Image(long jarg1);
  public final static native double Image_getWidthMm(long jarg1, Image jarg1_);
  public final static native double Image_getHeightMm(long jarg1, Image jarg1_);
  public final static native void Image_setSizeMm(long jarg1, Image jarg1_, double jarg2, double jarg3);
  public final static native long Image_getWidth(long jarg1, Image jarg1_);
  public final static native long Image_getHeight(long jarg1, Image jarg1_);
  public final static native long Image_getReadingDataHandler(long jarg1, Image jarg1_);
  public final static native long Image_getWritingDataHandler(long jarg1, Image jarg1_);
  public final static native String Image_getColorSpace(long jarg1, Image jarg1_);
  public final static native long Image_getChannelsNumber(long jarg1, Image jarg1_);
  public final static native int Image_getDepth(long jarg1, Image jarg1_);
  public final static native long Image_getHighBit(long jarg1, Image jarg1_);
  public final static native void delete_Tag(long jarg1);
  public final static native long Tag_getBuffersCount(long jarg1, Tag jarg1_);
  public final static native boolean Tag_bufferExists(long jarg1, Tag jarg1_, long jarg2);
  public final static native long Tag_getBufferSize(long jarg1, Tag jarg1_, long jarg2);
  public final static native long Tag_getReadingDataHandler(long jarg1, Tag jarg1_, long jarg2);
  public final static native long Tag_getWritingDataHandler(long jarg1, Tag jarg1_, long jarg2);
  public final static native long Tag_getReadingDataHandlerNumeric(long jarg1, Tag jarg1_, long jarg2);
  public final static native long Tag_getReadingDataHandlerRaw(long jarg1, Tag jarg1_, long jarg2);
  public final static native long Tag_getWritingDataHandlerNumeric(long jarg1, Tag jarg1_, long jarg2);
  public final static native long Tag_getWritingDataHandlerRaw(long jarg1, Tag jarg1_, long jarg2);
  public final static native long Tag_getStreamReader(long jarg1, Tag jarg1_, long jarg2);
  public final static native long Tag_getStreamWriter(long jarg1, Tag jarg1_, long jarg2);
  public final static native long Tag_getSequenceItem(long jarg1, Tag jarg1_, long jarg2);
  public final static native boolean Tag_sequenceItemExists(long jarg1, Tag jarg1_, long jarg2);
  public final static native void Tag_setSequenceItem(long jarg1, Tag jarg1_, long jarg2, long jarg3, DataSet jarg3_);
  public final static native void Tag_appendSequenceItem(long jarg1, Tag jarg1_, long jarg2, DataSet jarg2_);
  public final static native int Tag_getDataType(long jarg1, Tag jarg1_);
  public final static native long new_DataSet__SWIG_0();
  public final static native long new_DataSet__SWIG_1(String jarg1);
  public final static native long new_DataSet__SWIG_2(String jarg1, long jarg2, FileParts jarg2_);
  public final static native void delete_DataSet(long jarg1);
  public final static native long DataSet_getTags(long jarg1, DataSet jarg1_);
  public final static native long DataSet_getTag(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_);
  public final static native long DataSet_getTagCreate__SWIG_0(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, int jarg3);
  public final static native long DataSet_getTagCreate__SWIG_1(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_);
  public final static native long DataSet_getImage(long jarg1, DataSet jarg1_, long jarg2);
  public final static native long DataSet_getImageApplyModalityTransform(long jarg1, DataSet jarg1_, long jarg2);
  public final static native void DataSet_setImage(long jarg1, DataSet jarg1_, long jarg2, long jarg3, Image jarg3_, int jarg4);
  public final static native long DataSet_getVOIs(long jarg1, DataSet jarg1_);
  public final static native long DataSet_getSequenceItem(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3);
  public final static native void DataSet_setSequenceItem(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3, long jarg4, DataSet jarg4_);
  public final static native long DataSet_getLUT(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3);
  public final static native long DataSet_getReadingDataHandler(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3);
  public final static native long DataSet_getWritingDataHandler__SWIG_0(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3, int jarg4);
  public final static native long DataSet_getWritingDataHandler__SWIG_1(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3);
  public final static native long DataSet_getReadingDataHandlerNumeric(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3);
  public final static native long DataSet_getReadingDataHandlerRaw(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3);
  public final static native long DataSet_getWritingDataHandlerNumeric__SWIG_0(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3, int jarg4);
  public final static native long DataSet_getWritingDataHandlerNumeric__SWIG_1(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3);
  public final static native long DataSet_getWritingDataHandlerRaw__SWIG_0(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3, int jarg4);
  public final static native long DataSet_getWritingDataHandlerRaw__SWIG_1(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3);
  public final static native boolean DataSet_bufferExists(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3);
  public final static native int DataSet_getSignedLong__SWIG_0(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3);
  public final static native int DataSet_getSignedLong__SWIG_1(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3, int jarg4);
  public final static native void DataSet_setSignedLong__SWIG_0(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, int jarg3, int jarg4);
  public final static native void DataSet_setSignedLong__SWIG_1(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, int jarg3);
  public final static native long DataSet_getUnsignedLong__SWIG_0(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3);
  public final static native long DataSet_getUnsignedLong__SWIG_1(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3, long jarg4);
  public final static native void DataSet_setUnsignedLong__SWIG_0(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3, int jarg4);
  public final static native void DataSet_setUnsignedLong__SWIG_1(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3);
  public final static native double DataSet_getDouble__SWIG_0(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3);
  public final static native double DataSet_getDouble__SWIG_1(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3, double jarg4);
  public final static native void DataSet_setDouble__SWIG_0(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, double jarg3, int jarg4);
  public final static native void DataSet_setDouble__SWIG_1(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, double jarg3);
  public final static native String DataSet_getString__SWIG_0(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3);
  public final static native String DataSet_getString__SWIG_1(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3, String jarg4);
  public final static native void DataSet_setString__SWIG_0(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, String jarg3, int jarg4);
  public final static native void DataSet_setString__SWIG_1(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, String jarg3);
  public final static native long DataSet_getUnicodeString__SWIG_0(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3);
  public final static native long DataSet_getUnicodeString__SWIG_1(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3, long jarg4);
  public final static native void DataSet_setUnicodeString__SWIG_0(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3, int jarg4);
  public final static native void DataSet_setUnicodeString__SWIG_1(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3);
  public final static native long DataSet_getAge__SWIG_0(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3);
  public final static native long DataSet_getAge__SWIG_1(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3, long jarg4, Age jarg4_);
  public final static native void DataSet_setAge(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3, Age jarg3_);
  public final static native long DataSet_getDate__SWIG_0(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3);
  public final static native long DataSet_getDate__SWIG_1(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3, long jarg4, Date jarg4_);
  public final static native void DataSet_setDate__SWIG_0(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3, Date jarg3_, int jarg4);
  public final static native void DataSet_setDate__SWIG_1(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_, long jarg3, Date jarg3_);
  public final static native int DataSet_getDataType(long jarg1, DataSet jarg1_, long jarg2, TagId jarg2_);
  public final static native long CodecFactory_load__SWIG_0(long jarg1, StreamReader jarg1_, long jarg2);
  public final static native long CodecFactory_load__SWIG_1(long jarg1, StreamReader jarg1_);
  public final static native long CodecFactory_load__SWIG_2(String jarg1, long jarg2);
  public final static native long CodecFactory_load__SWIG_3(String jarg1);
  public final static native void CodecFactory_saveImage(long jarg1, StreamWriter jarg1_, long jarg2, Image jarg2_, String jarg3, int jarg4, int jarg5, long jarg6, boolean jarg7, boolean jarg8, boolean jarg9, boolean jarg10);
  public final static native void CodecFactory_save__SWIG_0(long jarg1, DataSet jarg1_, long jarg2, StreamWriter jarg2_, int jarg3);
  public final static native void CodecFactory_save__SWIG_1(long jarg1, DataSet jarg1_, String jarg2, int jarg3);
  public final static native void CodecFactory_setMaximumImageSize(long jarg1, long jarg2);
  public final static native long new_CodecFactory();
  public final static native void delete_CodecFactory(long jarg1);
  public final static native String TCPAddress_getNode(long jarg1, TCPAddress jarg1_);
  public final static native String TCPAddress_getService(long jarg1, TCPAddress jarg1_);
  public final static native void delete_TCPAddress(long jarg1);
  public final static native long new_TCPActiveAddress(String jarg1, String jarg2);
  public final static native void delete_TCPActiveAddress(long jarg1);
  public final static native long new_TCPPassiveAddress(String jarg1, String jarg2);
  public final static native void delete_TCPPassiveAddress(long jarg1);
  public final static native long new_TCPListener(long jarg1, TCPPassiveAddress jarg1_);
  public final static native long TCPListener_waitForConnection(long jarg1, TCPListener jarg1_);
  public final static native void TCPListener_terminate(long jarg1, TCPListener jarg1_);
  public final static native void delete_TCPListener(long jarg1);
  public final static native long new_TCPStream(long jarg1, TCPActiveAddress jarg1_);
  public final static native long TCPStream_getPeerAddress(long jarg1, TCPStream jarg1_);
  public final static native void TCPStream_terminate(long jarg1, TCPStream jarg1_);
  public final static native void delete_TCPStream(long jarg1);
  public final static native long new_Pipe(long jarg1);
  public final static native void Pipe_feed(long jarg1, Pipe jarg1_, long jarg2, ReadMemory jarg2_);
  public final static native long Pipe_sink(long jarg1, Pipe jarg1_, long jarg2, ReadWriteMemory jarg2_);
  public final static native void Pipe_close(long jarg1, Pipe jarg1_, long jarg2);
  public final static native void Pipe_terminate(long jarg1, Pipe jarg1_);
  public final static native void delete_Pipe(long jarg1);
  public final static native void delete_Transform(long jarg1);
  public final static native boolean Transform_isEmpty(long jarg1, Transform jarg1_);
  public final static native long Transform_allocateOutputImage(long jarg1, Transform jarg1_, long jarg2, Image jarg2_, long jarg3, long jarg4);
  public final static native void Transform_runTransform(long jarg1, Transform jarg1_, long jarg2, Image jarg2_, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, Image jarg7_, long jarg8, long jarg9);
  public final static native long new_TransformHighBit();
  public final static native void delete_TransformHighBit(long jarg1);
  public final static native long new_TransformsChain();
  public final static native void delete_TransformsChain(long jarg1);
  public final static native void TransformsChain_addTransform(long jarg1, TransformsChain jarg1_, long jarg2, Transform jarg2_);
  public final static native long new_ModalityVOILUT(long jarg1, DataSet jarg1_);
  public final static native void delete_ModalityVOILUT(long jarg1);
  public final static native long new_VOILUT();
  public final static native void delete_VOILUT(long jarg1);
  public final static native void VOILUT_applyOptimalVOI(long jarg1, VOILUT jarg1_, long jarg2, Image jarg2_, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void VOILUT_setCenterWidth(long jarg1, VOILUT jarg1_, double jarg2, double jarg3);
  public final static native void VOILUT_setLUT(long jarg1, VOILUT jarg1_, long jarg2, LUT jarg2_);
  public final static native double VOILUT_getCenter(long jarg1, VOILUT jarg1_);
  public final static native double VOILUT_getWidth(long jarg1, VOILUT jarg1_);
  public final static native String ColorTransformsFactory_normalizeColorSpace(String jarg1);
  public final static native boolean ColorTransformsFactory_isMonochrome(String jarg1);
  public final static native boolean ColorTransformsFactory_isSubsampledX(String jarg1);
  public final static native boolean ColorTransformsFactory_isSubsampledY(String jarg1);
  public final static native boolean ColorTransformsFactory_canSubsample(String jarg1);
  public final static native String ColorTransformsFactory_makeSubsampled(String jarg1, boolean jarg2, boolean jarg3);
  public final static native long ColorTransformsFactory_getNumberOfChannels(String jarg1);
  public final static native long ColorTransformsFactory_getTransform(String jarg1, String jarg2);
  public final static native long new_ColorTransformsFactory();
  public final static native void delete_ColorTransformsFactory(long jarg1);
  public final static native void delete_DicomDirEntry(long jarg1);
  public final static native long DicomDirEntry_getEntryDataSet(long jarg1, DicomDirEntry jarg1_);
  public final static native long DicomDirEntry_getNextEntry(long jarg1, DicomDirEntry jarg1_);
  public final static native long DicomDirEntry_getFirstChildEntry(long jarg1, DicomDirEntry jarg1_);
  public final static native void DicomDirEntry_setNextEntry(long jarg1, DicomDirEntry jarg1_, long jarg2, DicomDirEntry jarg2_);
  public final static native void DicomDirEntry_setFirstChildEntry(long jarg1, DicomDirEntry jarg1_, long jarg2, DicomDirEntry jarg2_);
  public final static native long DicomDirEntry_getFileParts(long jarg1, DicomDirEntry jarg1_);
  public final static native void DicomDirEntry_setFileParts(long jarg1, DicomDirEntry jarg1_, long jarg2, FileParts jarg2_);
  public final static native int DicomDirEntry_getType(long jarg1, DicomDirEntry jarg1_);
  public final static native String DicomDirEntry_getTypeString(long jarg1, DicomDirEntry jarg1_);
  public final static native long new_DicomDir__SWIG_0();
  public final static native long new_DicomDir__SWIG_1(long jarg1, DataSet jarg1_);
  public final static native void delete_DicomDir(long jarg1);
  public final static native long DicomDir_getNewEntry(long jarg1, DicomDir jarg1_, int jarg2);
  public final static native long DicomDir_getFirstRootEntry(long jarg1, DicomDir jarg1_);
  public final static native void DicomDir_setFirstRootEntry(long jarg1, DicomDir jarg1_, long jarg2, DicomDirEntry jarg2_);
  public final static native long DicomDir_updateDataSet(long jarg1, DicomDir jarg1_);
  public final static native long DicomDictionary_getUnicodeTagName(long jarg1, TagId jarg1_);
  public final static native String DicomDictionary_getTagName(long jarg1, TagId jarg1_);
  public final static native int DicomDictionary_getTagType(long jarg1, TagId jarg1_);
  public final static native long DicomDictionary_getWordSize(int jarg1);
  public final static native long DicomDictionary_getMaxSize(int jarg1);
  public final static native long new_DicomDictionary();
  public final static native void delete_DicomDictionary(long jarg1);
  public final static native long new_DrawBitmap__SWIG_0();
  public final static native long new_DrawBitmap__SWIG_1(long jarg1, Transform jarg1_);
  public final static native void delete_DrawBitmap(long jarg1);
  public final static native long DrawBitmap_getBitmap__SWIG_0(long jarg1, DrawBitmap jarg1_, long jarg2, Image jarg2_, int jarg3, long jarg4, byte[] jarg5);
  public final static native long DrawBitmap_getBitmap__SWIG_1(long jarg1, DrawBitmap jarg1_, long jarg2, Image jarg2_, int jarg3, long jarg4);
  public final static native long new_FileStreamInput(String jarg1);
  public final static native void delete_FileStreamInput(long jarg1);
  public final static native long new_FileStreamOutput(String jarg1);
  public final static native void delete_FileStreamOutput(long jarg1);
  public final static native long new_MemoryStreamInput__SWIG_0(long jarg1, ReadMemory jarg1_);
  public final static native long new_MemoryStreamInput__SWIG_1(long jarg1, ReadWriteMemory jarg1_);
  public final static native void delete_MemoryStreamInput(long jarg1);
  public final static native long new_MemoryStreamOutput(long jarg1, ReadWriteMemory jarg1_);
  public final static native void delete_MemoryStreamOutput(long jarg1);
  public final static native long new_PresentationContext__SWIG_0(String jarg1);
  public final static native long new_PresentationContext__SWIG_1(String jarg1, boolean jarg2, boolean jarg3);
  public final static native void PresentationContext_addTransferSyntax(long jarg1, PresentationContext jarg1_, String jarg2);
  public final static native void delete_PresentationContext(long jarg1);
  public final static native long new_PresentationContexts();
  public final static native void delete_PresentationContexts(long jarg1);
  public final static native void PresentationContexts_addPresentationContext(long jarg1, PresentationContexts jarg1_, long jarg2, PresentationContext jarg2_);
  public final static native long new_AssociationMessage(String jarg1);
  public final static native String AssociationMessage_getAbstractSyntax(long jarg1, AssociationMessage jarg1_);
  public final static native long AssociationMessage_getCommand(long jarg1, AssociationMessage jarg1_);
  public final static native long AssociationMessage_getPayload(long jarg1, AssociationMessage jarg1_);
  public final static native boolean AssociationMessage_hasPayload(long jarg1, AssociationMessage jarg1_);
  public final static native void AssociationMessage_addDataSet(long jarg1, AssociationMessage jarg1_, long jarg2, DataSet jarg2_);
  public final static native void delete_AssociationMessage(long jarg1);
  public final static native void delete_AssociationBase(long jarg1);
  public final static native long AssociationBase_getCommand(long jarg1, AssociationBase jarg1_);
  public final static native long AssociationBase_getResponse(long jarg1, AssociationBase jarg1_, int jarg2);
  public final static native void AssociationBase_sendMessage(long jarg1, AssociationBase jarg1_, long jarg2, AssociationMessage jarg2_);
  public final static native void AssociationBase_release(long jarg1, AssociationBase jarg1_);
  public final static native void AssociationBase_abort(long jarg1, AssociationBase jarg1_);
  public final static native String AssociationBase_getThisAET(long jarg1, AssociationBase jarg1_);
  public final static native String AssociationBase_getOtherAET(long jarg1, AssociationBase jarg1_);
  public final static native String AssociationBase_getTransferSyntax(long jarg1, AssociationBase jarg1_, String jarg2);
  public final static native long new_AssociationSCU(String jarg1, String jarg2, long jarg3, long jarg4, long jarg5, PresentationContexts jarg5_, long jarg6, StreamReader jarg6_, long jarg7, StreamWriter jarg7_, long jarg8);
  public final static native void delete_AssociationSCU(long jarg1);
  public final static native long new_AssociationSCP(String jarg1, long jarg2, long jarg3, long jarg4, PresentationContexts jarg4_, long jarg5, StreamReader jarg5_, long jarg6, StreamWriter jarg6_, long jarg7, long jarg8);
  public final static native void delete_AssociationSCP(long jarg1);
  public final static native void delete_DimseCommandBase(long jarg1);
  public final static native long DimseCommandBase_getCommandDataSet(long jarg1, DimseCommandBase jarg1_);
  public final static native long DimseCommandBase_getPayloadDataSet(long jarg1, DimseCommandBase jarg1_);
  public final static native String DimseCommandBase_getAbstractSyntax(long jarg1, DimseCommandBase jarg1_);
  public final static native String DimseCommandBase_getAffectedSopInstanceUid(long jarg1, DimseCommandBase jarg1_);
  public final static native String DimseCommandBase_getAffectedSopClassUid(long jarg1, DimseCommandBase jarg1_);
  public final static native String DimseCommandBase_getRequestedSopInstanceUid(long jarg1, DimseCommandBase jarg1_);
  public final static native String DimseCommandBase_getRequestedSopClassUid(long jarg1, DimseCommandBase jarg1_);
  public final static native int DimseCommand_getID(long jarg1, DimseCommand jarg1_);
  public final static native int DimseCommand_getCommandType(long jarg1, DimseCommand jarg1_);
  public final static native long DimseCommand_getAsCStoreCommand(long jarg1, DimseCommand jarg1_);
  public final static native long DimseCommand_getAsCMoveCommand(long jarg1, DimseCommand jarg1_);
  public final static native long DimseCommand_getAsCGetCommand(long jarg1, DimseCommand jarg1_);
  public final static native long DimseCommand_getAsCFindCommand(long jarg1, DimseCommand jarg1_);
  public final static native long DimseCommand_getAsCEchoCommand(long jarg1, DimseCommand jarg1_);
  public final static native long DimseCommand_getAsCCancelCommand(long jarg1, DimseCommand jarg1_);
  public final static native long DimseCommand_getAsNActionCommand(long jarg1, DimseCommand jarg1_);
  public final static native long DimseCommand_getAsNEventReportCommand(long jarg1, DimseCommand jarg1_);
  public final static native long DimseCommand_getAsNCreateCommand(long jarg1, DimseCommand jarg1_);
  public final static native long DimseCommand_getAsNDeleteCommand(long jarg1, DimseCommand jarg1_);
  public final static native long DimseCommand_getAsNSetCommand(long jarg1, DimseCommand jarg1_);
  public final static native long DimseCommand_getAsNGetCommand(long jarg1, DimseCommand jarg1_);
  public final static native void delete_DimseCommand(long jarg1);
  public final static native int DimseResponse_getStatus(long jarg1, DimseResponse jarg1_);
  public final static native int DimseResponse_getStatusCode(long jarg1, DimseResponse jarg1_);
  public final static native void delete_DimseResponse(long jarg1);
  public final static native long CPartialResponse_getRemainingSubOperations(long jarg1, CPartialResponse jarg1_);
  public final static native long CPartialResponse_getCompletedSubOperations(long jarg1, CPartialResponse jarg1_);
  public final static native long CPartialResponse_getFailedSubOperations(long jarg1, CPartialResponse jarg1_);
  public final static native long CPartialResponse_getWarningSubOperations(long jarg1, CPartialResponse jarg1_);
  public final static native void delete_CPartialResponse(long jarg1);
  public final static native long new_CStoreCommand(String jarg1, int jarg2, int jarg3, String jarg4, String jarg5, String jarg6, int jarg7, long jarg8, DataSet jarg8_);
  public final static native String CStoreCommand_getOriginatorAET(long jarg1, CStoreCommand jarg1_);
  public final static native int CStoreCommand_getOriginatorMessageID(long jarg1, CStoreCommand jarg1_);
  public final static native void delete_CStoreCommand(long jarg1);
  public final static native long new_CStoreResponse(long jarg1, CStoreCommand jarg1_, int jarg2);
  public final static native void delete_CStoreResponse(long jarg1);
  public final static native long new_CGetCommand(String jarg1, int jarg2, int jarg3, String jarg4, long jarg5, DataSet jarg5_);
  public final static native void delete_CGetCommand(long jarg1);
  public final static native long new_CGetResponse__SWIG_0(long jarg1, CGetCommand jarg1_, int jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, DataSet jarg7_);
  public final static native long new_CGetResponse__SWIG_1(long jarg1, CGetCommand jarg1_, int jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void delete_CGetResponse(long jarg1);
  public final static native long new_CFindCommand(String jarg1, int jarg2, int jarg3, String jarg4, long jarg5, DataSet jarg5_);
  public final static native void delete_CFindCommand(long jarg1);
  public final static native long new_CFindResponse__SWIG_0(long jarg1, CFindCommand jarg1_, long jarg2, DataSet jarg2_);
  public final static native long new_CFindResponse__SWIG_1(long jarg1, CFindCommand jarg1_, int jarg2);
  public final static native void delete_CFindResponse(long jarg1);
  public final static native long new_CMoveCommand__SWIG_0(String jarg1, int jarg2, int jarg3, String jarg4, long jarg5, DataSet jarg5_);
  public final static native long new_CMoveCommand__SWIG_1(String jarg1, int jarg2, int jarg3, String jarg4, String jarg5, long jarg6, DataSet jarg6_);
  public final static native String CMoveCommand_getDestinationAET(long jarg1, CMoveCommand jarg1_);
  public final static native void delete_CMoveCommand(long jarg1);
  public final static native long new_CMoveResponse__SWIG_0(long jarg1, CMoveCommand jarg1_, int jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, DataSet jarg7_);
  public final static native long new_CMoveResponse__SWIG_1(long jarg1, CMoveCommand jarg1_, int jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void delete_CMoveResponse(long jarg1);
  public final static native long new_CEchoCommand(String jarg1, int jarg2, int jarg3, String jarg4);
  public final static native void delete_CEchoCommand(long jarg1);
  public final static native long new_CEchoResponse(long jarg1, CEchoCommand jarg1_, int jarg2);
  public final static native void delete_CEchoResponse(long jarg1);
  public final static native long new_CCancelCommand(String jarg1, int jarg2, int jarg3, int jarg4);
  public final static native int CCancelCommand_getCancelMessageID(long jarg1, CCancelCommand jarg1_);
  public final static native void delete_CCancelCommand(long jarg1);
  public final static native long new_NEventReportCommand__SWIG_0(String jarg1, int jarg2, String jarg3, String jarg4, int jarg5);
  public final static native long new_NEventReportCommand__SWIG_1(String jarg1, int jarg2, String jarg3, String jarg4, int jarg5, long jarg6, DataSet jarg6_);
  public final static native int NEventReportCommand_getEventID(long jarg1, NEventReportCommand jarg1_);
  public final static native void delete_NEventReportCommand(long jarg1);
  public final static native long new_NEventReportResponse__SWIG_0(long jarg1, NEventReportCommand jarg1_, long jarg2, DataSet jarg2_);
  public final static native long new_NEventReportResponse__SWIG_1(long jarg1, NEventReportCommand jarg1_, int jarg2);
  public final static native int NEventReportResponse_getEventID(long jarg1, NEventReportResponse jarg1_);
  public final static native void delete_NEventReportResponse(long jarg1);
  public final static native long new_NGetCommand(String jarg1, int jarg2, String jarg3, String jarg4, long jarg5);
  public final static native long NGetCommand_getAttributeList(long jarg1, NGetCommand jarg1_);
  public final static native void delete_NGetCommand(long jarg1);
  public final static native long new_NGetResponse__SWIG_0(long jarg1, NGetCommand jarg1_, int jarg2, long jarg3, DataSet jarg3_);
  public final static native long new_NGetResponse__SWIG_1(long jarg1, NGetCommand jarg1_, int jarg2);
  public final static native void delete_NGetResponse(long jarg1);
  public final static native long new_NSetCommand(String jarg1, int jarg2, String jarg3, String jarg4, long jarg5, DataSet jarg5_);
  public final static native void delete_NSetCommand(long jarg1);
  public final static native long new_NSetResponse__SWIG_0(long jarg1, NSetCommand jarg1_, long jarg2);
  public final static native long new_NSetResponse__SWIG_1(long jarg1, NSetCommand jarg1_, int jarg2);
  public final static native long NSetResponse_getModifiedAttributes(long jarg1, NSetResponse jarg1_);
  public final static native void delete_NSetResponse(long jarg1);
  public final static native long new_NActionCommand__SWIG_0(String jarg1, int jarg2, String jarg3, String jarg4, int jarg5, long jarg6, DataSet jarg6_);
  public final static native long new_NActionCommand__SWIG_1(String jarg1, int jarg2, String jarg3, String jarg4, int jarg5);
  public final static native int NActionCommand_getActionID(long jarg1, NActionCommand jarg1_);
  public final static native void delete_NActionCommand(long jarg1);
  public final static native long new_NActionResponse__SWIG_0(long jarg1, NActionCommand jarg1_, long jarg2, DataSet jarg2_);
  public final static native long new_NActionResponse__SWIG_1(long jarg1, NActionCommand jarg1_, int jarg2);
  public final static native int NActionResponse_getActionID(long jarg1, NActionResponse jarg1_);
  public final static native void delete_NActionResponse(long jarg1);
  public final static native long new_NCreateCommand__SWIG_0(String jarg1, int jarg2, String jarg3, String jarg4, long jarg5, DataSet jarg5_);
  public final static native long new_NCreateCommand__SWIG_1(String jarg1, int jarg2, String jarg3, String jarg4);
  public final static native void delete_NCreateCommand(long jarg1);
  public final static native long new_NCreateResponse__SWIG_0(long jarg1, NCreateCommand jarg1_, long jarg2, DataSet jarg2_);
  public final static native long new_NCreateResponse__SWIG_1(long jarg1, NCreateCommand jarg1_, String jarg2, long jarg3, DataSet jarg3_);
  public final static native long new_NCreateResponse__SWIG_2(long jarg1, NCreateCommand jarg1_, int jarg2);
  public final static native long new_NCreateResponse__SWIG_3(long jarg1, NCreateCommand jarg1_, String jarg2);
  public final static native void delete_NCreateResponse(long jarg1);
  public final static native long new_NDeleteCommand(String jarg1, int jarg2, String jarg3, String jarg4);
  public final static native void delete_NDeleteCommand(long jarg1);
  public final static native long new_NDeleteResponse(long jarg1, NDeleteCommand jarg1_, int jarg2);
  public final static native void delete_NDeleteResponse(long jarg1);
  public final static native long new_DimseService(long jarg1, AssociationBase jarg1_);
  public final static native String DimseService_getTransferSyntax(long jarg1, DimseService jarg1_, String jarg2);
  public final static native int DimseService_getNextCommandID(long jarg1, DimseService jarg1_);
  public final static native DimseCommand DimseService_getCommand(long jarg1, DimseService jarg1_);
  public final static native void DimseService_sendCommandOrResponse(long jarg1, DimseService jarg1_, long jarg2, DimseCommandBase jarg2_);
  public final static native long DimseService_getCStoreResponse(long jarg1, DimseService jarg1_, long jarg2, CStoreCommand jarg2_);
  public final static native long DimseService_getCGetResponse(long jarg1, DimseService jarg1_, long jarg2, CGetCommand jarg2_);
  public final static native long DimseService_getCFindResponse(long jarg1, DimseService jarg1_, long jarg2, CFindCommand jarg2_);
  public final static native long DimseService_getCMoveResponse(long jarg1, DimseService jarg1_, long jarg2, CMoveCommand jarg2_);
  public final static native long DimseService_getCEchoResponse(long jarg1, DimseService jarg1_, long jarg2, CEchoCommand jarg2_);
  public final static native long DimseService_getNEventReportResponse(long jarg1, DimseService jarg1_, long jarg2, NEventReportCommand jarg2_);
  public final static native long DimseService_getNGetResponse(long jarg1, DimseService jarg1_, long jarg2, NGetCommand jarg2_);
  public final static native long DimseService_getNSetResponse(long jarg1, DimseService jarg1_, long jarg2, NSetCommand jarg2_);
  public final static native long DimseService_getNActionResponse(long jarg1, DimseService jarg1_, long jarg2, NActionCommand jarg2_);
  public final static native long DimseService_getNCreateResponse(long jarg1, DimseService jarg1_, long jarg2, NCreateCommand jarg2_);
  public final static native long DimseService_getNDeleteResponse(long jarg1, DimseService jarg1_, long jarg2, NDeleteCommand jarg2_);
  public final static native void delete_DimseService(long jarg1);
  public final static native long ReadWriteMemory_SWIGUpcast(long jarg1);
  public final static native long ReadingDataHandlerNumeric_SWIGUpcast(long jarg1);
  public final static native long WritingDataHandlerNumeric_SWIGUpcast(long jarg1);
  public final static native long TCPActiveAddress_SWIGUpcast(long jarg1);
  public final static native long TCPPassiveAddress_SWIGUpcast(long jarg1);
  public final static native long TCPStream_SWIGUpcast(long jarg1);
  public final static native long Pipe_SWIGUpcast(long jarg1);
  public final static native long TransformHighBit_SWIGUpcast(long jarg1);
  public final static native long TransformsChain_SWIGUpcast(long jarg1);
  public final static native long ModalityVOILUT_SWIGUpcast(long jarg1);
  public final static native long VOILUT_SWIGUpcast(long jarg1);
  public final static native long FileStreamInput_SWIGUpcast(long jarg1);
  public final static native long FileStreamOutput_SWIGUpcast(long jarg1);
  public final static native long MemoryStreamInput_SWIGUpcast(long jarg1);
  public final static native long MemoryStreamOutput_SWIGUpcast(long jarg1);
  public final static native long AssociationSCU_SWIGUpcast(long jarg1);
  public final static native long AssociationSCP_SWIGUpcast(long jarg1);
  public final static native long DimseCommand_SWIGUpcast(long jarg1);
  public final static native long DimseResponse_SWIGUpcast(long jarg1);
  public final static native long CPartialResponse_SWIGUpcast(long jarg1);
  public final static native long CStoreCommand_SWIGUpcast(long jarg1);
  public final static native long CStoreResponse_SWIGUpcast(long jarg1);
  public final static native long CGetCommand_SWIGUpcast(long jarg1);
  public final static native long CGetResponse_SWIGUpcast(long jarg1);
  public final static native long CFindCommand_SWIGUpcast(long jarg1);
  public final static native long CFindResponse_SWIGUpcast(long jarg1);
  public final static native long CMoveCommand_SWIGUpcast(long jarg1);
  public final static native long CMoveResponse_SWIGUpcast(long jarg1);
  public final static native long CEchoCommand_SWIGUpcast(long jarg1);
  public final static native long CEchoResponse_SWIGUpcast(long jarg1);
  public final static native long CCancelCommand_SWIGUpcast(long jarg1);
  public final static native long NEventReportCommand_SWIGUpcast(long jarg1);
  public final static native long NEventReportResponse_SWIGUpcast(long jarg1);
  public final static native long NGetCommand_SWIGUpcast(long jarg1);
  public final static native long NGetResponse_SWIGUpcast(long jarg1);
  public final static native long NSetCommand_SWIGUpcast(long jarg1);
  public final static native long NSetResponse_SWIGUpcast(long jarg1);
  public final static native long NActionCommand_SWIGUpcast(long jarg1);
  public final static native long NActionResponse_SWIGUpcast(long jarg1);
  public final static native long NCreateCommand_SWIGUpcast(long jarg1);
  public final static native long NCreateResponse_SWIGUpcast(long jarg1);
  public final static native long NDeleteCommand_SWIGUpcast(long jarg1);
  public final static native long NDeleteResponse_SWIGUpcast(long jarg1);
}
