/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.imebra;

public class Pipe extends BaseStreamInput {
  private transient long swigCPtr;

  protected Pipe(long cPtr, boolean cMemoryOwn) {
    super(imebraJNI.Pipe_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Pipe obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        imebraJNI.delete_Pipe(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public Pipe(long circularBufferSize) {
    this(imebraJNI.new_Pipe(circularBufferSize), true);
  }

  public void feed(ReadMemory buffer) {
    imebraJNI.Pipe_feed(swigCPtr, this, ReadMemory.getCPtr(buffer), buffer);
  }

  public long sink(ReadWriteMemory buffer) {
    return imebraJNI.Pipe_sink(swigCPtr, this, ReadWriteMemory.getCPtr(buffer), buffer);
  }

  public void close(long timeoutMilliseconds) {
    imebraJNI.Pipe_close(swigCPtr, this, timeoutMilliseconds);
  }

  public void terminate() {
    imebraJNI.Pipe_terminate(swigCPtr, this);
  }

}
