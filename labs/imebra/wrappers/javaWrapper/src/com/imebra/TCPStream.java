/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.imebra;

public class TCPStream extends BaseStreamInput {
  private transient long swigCPtr;

  protected TCPStream(long cPtr, boolean cMemoryOwn) {
    super(imebraJNI.TCPStream_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TCPStream obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        imebraJNI.delete_TCPStream(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public TCPStream(TCPActiveAddress address) {
    this(imebraJNI.new_TCPStream(TCPActiveAddress.getCPtr(address), address), true);
  }

  public TCPAddress getPeerAddress() {
    long cPtr = imebraJNI.TCPStream_getPeerAddress(swigCPtr, this);
    return (cPtr == 0) ? null : new TCPAddress(cPtr, true);
  }

  public void terminate() {
    imebraJNI.TCPStream_terminate(swigCPtr, this);
  }

}
